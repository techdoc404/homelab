---
version: "2.1"
services:
  unifi-network-application:
    image: lscr.io/linuxserver/unifi-network-application:latest
    container_name: unifi-network-application
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - MONGO_USER=unifi
      - MONGO_PASS=${MONGO_PASS}   #create env, replace in init-mongo.js
      - MONGO_HOST=unifi-db
      - MONGO_PORT=27017
      - MONGO_DBNAME=unifi
      - MEM_LIMIT=1024 #optional
      - MEM_STARTUP=1024 #optional
      - MONGO_TLS= #optional
      - MONGO_AUTHSOURCE= #optional
    volumes:
      - /opt/unifi/unifi/config:/config
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 1900:1900/udp #optional
      - 8843:8843 #optional
      - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514/udp #optional
    restart: unless-stopped
    labels:
      - traefik.http.routers.unifi.rule=Host(`unifi`) || Host(`uc`)
      - traefik.http.services.unifi.loadbalancer.server.port=8443
      - traefik.enable=true
      - com.centurylinklabs.watchtower.enable=true
    networks:
      - web
      - unifi
      
  unifi-db:
    image: docker.io/mongo:4.4
    container_name: unifi-db
    volumes:
      - /opt/unifi/unifi-db/data:/data/db
      - /opt/unifi/unifi-db/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago

  networks:
    web:
      external: true
    unifi:
      driver: "bridge"